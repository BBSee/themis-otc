'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./style/pagenation.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Pagenation = function (_Component) {
    _inherits(Pagenation, _Component);

    function Pagenation() {
        _classCallCheck(this, Pagenation);

        var _this = _possibleConstructorReturn(this, (Pagenation.__proto__ || Object.getPrototypeOf(Pagenation)).call(this));

        _this.state = {
            current: 1,
            value: ''
        };
        return _this;
    }

    _createClass(Pagenation, [{
        key: 'handleClick',
        value: function handleClick(current) {
            this.setState({ current: current });
            if (this.props.onChange) {
                this.props.onChange(current);
            }
        }
    }, {
        key: 'goNext',
        value: function goNext() {
            var pageNow = this.state.current;
            if (pageNow < Math.ceil(this.props.total / this.props.defaultPageSize)) {
                this.setState({ current: pageNow + 1 });
                if (this.props.onChange) {
                    this.props.onChange(pageNow + 1);
                }
            }
        }
    }, {
        key: 'goPrev',
        value: function goPrev() {
            var pageNow = this.state.current;
            if (pageNow > 1) {
                this.setState({ current: pageNow - 1 });
                if (this.props.onChange) {
                    this.props.onChange(pageNow - 1);
                }
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var defaultPageSize = 10;
            if (this.props.defaultPageSize) {
                defaultPageSize = this.props.defaultPageSize;
            }
            var total = Math.ceil(this.props.total / defaultPageSize);
            var pageNow = this.state.current;
            var pageItems = [];
            var begin = void 0,
                pageLength = void 0,
                ellipsis = void 0;
            if (total <= 10) {
                pageLength = total;
                begin = 1;
            } else {
                pageLength = 5;
                if (pageNow >= total - 2) {
                    // 1..
                    begin = total - 4;
                    ellipsis = 1;
                } else if (pageNow <= 3) {
                    //..total
                    begin = 1;
                    ellipsis = 2;
                } else {
                    begin = pageNow - 2;
                    if (pageNow == 4) {
                        //    1    ..total
                        ellipsis = 3;
                    } else if (pageNow == total - 3) {
                        ellipsis = 5;
                    } else {
                        ellipsis = 4;
                    }
                }
            }
            for (var i = 0; i < pageLength; i++) {
                var _pageNow = this.state.current;
                var showPage = begin + i;
                if (_pageNow == showPage) {
                    pageItems.push({ pageNum: showPage, active: true });
                } else {
                    pageItems.push({ pageNum: showPage, active: false });
                }
            }
            return _react2.default.createElement(
                'div',
                { className: 'nl-pagnation' },
                _react2.default.createElement(
                    'ul',
                    { className: 'pagnation-cols' },
                    _react2.default.createElement(
                        'li',
                        { className: 'nl-pagination-item' },
                        _react2.default.createElement('a', { className: this.state.current == 1 ? 'prev disable' : 'prev', onClick: this.goPrev.bind(this) })
                    ),
                    ellipsis == 1 || ellipsis == 4 || ellipsis == 5 ? _react2.default.createElement(
                        'ul',
                        { className: 'nl-ellipsis' },
                        _react2.default.createElement(
                            'li',
                            { className: 'nl-pagination-item' },
                            _react2.default.createElement(
                                'a',
                                { onClick: this.handleClick.bind(this, 1) },
                                '1'
                            )
                        ),
                        _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement('a', { className: 'nl-pagination-ellipsis' })
                        )
                    ) : '',
                    ellipsis == 3 ? _react2.default.createElement(
                        'li',
                        { className: 'nl-pagination-item' },
                        _react2.default.createElement(
                            'a',
                            { onClick: this.handleClick.bind(this, 1) },
                            '1'
                        )
                    ) : '',
                    pageItems.map(function (item, index) {
                        return _react2.default.createElement(
                            'li',
                            { key: index, onClick: _this2.handleClick.bind(_this2, item.pageNum), className: 'nl-pagination-item ' + (item.active ? 'active' : '') },
                            _react2.default.createElement(
                                'a',
                                null,
                                item.pageNum
                            )
                        );
                    }),
                    ellipsis == 5 ? _react2.default.createElement(
                        'li',
                        { className: 'nl-pagination-item' },
                        _react2.default.createElement(
                            'a',
                            { onClick: this.handleClick.bind(this, total) },
                            total
                        )
                    ) : '',
                    ellipsis == 3 || ellipsis == 4 || ellipsis == 2 ? _react2.default.createElement(
                        'ul',
                        { className: 'nl-ellipsis' },
                        _react2.default.createElement(
                            'li',
                            null,
                            _react2.default.createElement('a', { className: 'nl-pagination-ellipsis' })
                        ),
                        _react2.default.createElement(
                            'li',
                            { className: 'nl-pagination-item' },
                            _react2.default.createElement(
                                'a',
                                { onClick: this.handleClick.bind(this, total) },
                                total
                            )
                        )
                    ) : '',
                    _react2.default.createElement(
                        'li',
                        { className: 'nl-pagination-item' },
                        _react2.default.createElement('a', { className: this.state.current == total || total == 0 ? 'next disable' : 'next', onClick: this.goNext.bind(this) })
                    )
                )
            );
        }
    }]);

    return Pagenation;
}(_react.Component);

exports.default = Pagenation;